; for xml and html reports, set the following enviromental variables
; mypy_args = "--html-report reports/mypy_report"
; pytest_args = "--junitxml=reports/junit-{env:OS:UNKNOWN_OS}-{envname}.xml --junit-prefix={env:OS:UNKNOWN_OS}  --basetemp={envtmpdir}"
; sphinx_args = "-W -b html -d {envtmpdir}/doctrees source  {envtmpdir}/html"
[tox]
envlist = py39, py310, py311, py312, py313
minversion = 3.10


[pytest]
testpaths = tests
addopts = --verbose
bdd_features_base_dir = tests/features/


[testenv]
extras = kdu
download = true
; ======================== tests ========================
deps =
    pytest
    pytest-bdd < 4.0
    --constraint requirements-dev.txt

commands= pytest --basetemp={envtmpdir}  {posargs}


[testenv:docs]
deps=
    sphinx
    sphinx-argparse
    pykdu-compress
    -c requirements-dev.txt

package = editable

commands=
    sphinx-build -W -b html -d {envtmpdir}/doctrees {toxinidir}/docs/source  {envtmpdir}/html -v
    sphinx-build -b doctest  -d {envtmpdir}/doctrees {toxinidir}/docs/source {envtmpdir}/doctest {posargs}


[testenv:mypy]
deps =
    mypy
    lxml
    -c requirements-dev.txt

skip_install=True
setenv = MYPY_CACHE_DIR = {temp_dir}/.mypy_cache
commands = mypy {posargs: -p uiucprescon}


[testenv:flake8]
description = check the code style
deps =
    flake8
    -c requirements-dev.txt

skip_install=True
commands = flake8 {posargs: uiucprescon}


[testenv:pylint]
description = check the code style
deps =
    pylint
    -c requirements-dev.txt

skip_install=True
commands =  pylint {posargs: uiucprescon} --disable import-error


[testenv:pydocstyle]
skip_install = true
deps=
    pydocstyle
    -c requirements-dev.txt

commands =
    pydocstyle {posargs: {toxinidir}/uiucprescon}


[testenv:bandit]
skip_install = true
deps=
    bandit
    -c requirements-dev.txt

commands =
    bandit {posargs: --recursive {toxinidir}/uiucprescon}
