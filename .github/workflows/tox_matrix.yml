on: [push, pull_request]
name: Tox Multi-platform Compatibility Test
jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      tox_matrix: ${{ steps.dataStep.outputs.myoutput }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        name: Get tox environments
        with:
          cache: 'pip'
          python-version: '3.13'
      - id: dataStep
        run: |
          python -m pip install --constraint requirements-dev.txt tox-uv 
          echo "myoutput=$(uvx --quiet --with tox-uv tox list -d --no-desc | sed -E 's/(.*py)([0-9])([0-9]+)/\2.\3/' | jq  --raw-input . | jq -c --slurp)" >> $GITHUB_OUTPUT

  build:
    needs: setup
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ${{ fromJson(needs.setup.outputs.tox_matrix) }}
      fail-fast: false
    name: Python ${{ matrix.python-version }} ${{ matrix.os }} build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip' # caching pip dependencies
      - name: Install requirements
        run: |
          pip install wheel
          pip install tox --constraint requirements-dev.txt
      - uses: actions/github-script@v7
        id: tox-env
        with:
          result-encoding: string
          script: |
            return "py${{matrix.python-version}}".replace('.','')
      - name: Run tox
        run: tox -e ${{steps.tox-env.outputs.result}} -vvv
        env:
          PIP_EXTRA_INDEX_URL: ${{vars.PIP_EXTRA_INDEX_URL}}